// <auto-generated />
using Lab2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab2.Migrations
{
    [DbContext(typeof(ITIContext))]
    [Migration("20230924153537_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab2.Models.Emp_Project", b =>
                {
                    b.Property<int>("emp_id")
                        .HasColumnType("int");

                    b.Property<int>("proj_id")
                        .HasColumnType("int");

                    b.Property<int>("Working_Hours")
                        .HasColumnType("int");

                    b.HasKey("emp_id", "proj_id");

                    b.HasIndex("proj_id");

                    b.ToTable("Emp_Projects");
                });

            modelBuilder.Entity("Lab2.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Office_Id")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Office_Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Lab2.Models.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Offices");
                });

            modelBuilder.Entity("Lab2.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Lab2.Models.Emp_Project", b =>
                {
                    b.HasOne("Lab2.Models.Employee", "Employee")
                        .WithMany("Emp_Projects")
                        .HasForeignKey("emp_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Lab2.Models.Project", "Project")
                        .WithMany("Emp_Projects")
                        .HasForeignKey("proj_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Lab2.Models.Employee", b =>
                {
                    b.HasOne("Lab2.Models.Office", "Office")
                        .WithMany("Employees")
                        .HasForeignKey("Office_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Office");
                });

            modelBuilder.Entity("Lab2.Models.Employee", b =>
                {
                    b.Navigation("Emp_Projects");
                });

            modelBuilder.Entity("Lab2.Models.Office", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Lab2.Models.Project", b =>
                {
                    b.Navigation("Emp_Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
